---
stages:
    - lint 
    - docker
    - deploy

variables:
    APP_NAME: app

lint_code:
    stage: lint
    image: python:3.8.10
    before_script:
        - pip install --upgrade pip
        - pip install -r requirements.txt
    script:
        - pylint  *.py ./app

build_image_dev:
    stage: docker
    image: docker:stable
    script:
        - docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
        - docker build --pull -t ${CI_REGISTRY_IMAGE}:dev .
        - docker push ${CI_REGISTRY_IMAGE}:dev
    only: 
        - dev

build_image_master:
    stage: docker
    image: docker:stable
    script:
        - docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
        - docker build --pull -t ${CI_REGISTRY_IMAGE}:latest .
        - docker tag ${CI_REGISTRY_IMAGE}:latest ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
        - docker push ${CI_REGISTRY_IMAGE}:latest
        - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    only:
        - tags
    except:
        - branches

k8s_deploy:
    stage: deploy
    image: gitlab.devpizzasoft.ru:4567/root/public-containers/helm3:1.0.0
    script:
        - mkdir -p $HOME/.kube
        - mv $KUBECONFIG_FILE $HOME/.kube/config
        - cp $IPECHO_VALUES_FILE ./values.yaml
        - echo "Разворачиваем приложение ${APP_NAME}:${CI_COMMIT_TAG}"
        - helm upgrade ${APP_NAME} ./.helm3 --install --values=./values.yaml --set image.tag=${CI_COMMIT_TAG} --namespace default
    only:
        - tags
    except:
        - branches

docker_deploy:
    stage: deploy
    image: ansible-alpine:v2.9.2
    script:
        - export ANSIBLE_CONFIG=./ansible.cfg
        - cd ansible/ && ansible --version
        - chmod 600 "${DEPLOY_PRIVATE_KEY}"
        - echo $VM_USERNAME
        - ansible-playbook deploy_ipecho.yml --private-key "${DEPLOY_PRIVATE_KEY}" -u root 
    when: manual

